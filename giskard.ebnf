giskard_spec = {import_statement, ";"}, {(symbol, ";") | function_definition | class_definition};

import_statement = "import", quoted_string, ["as", var];

function_definition = "def", declaration, "(", declaration, {",", declaration}, ")", "{", 
							{symbol, ";"}, 
							"return", expression, ";", 
						"}";

class_definition = "class", var, "(", declaration, {",", declaration}, ")", "{", 
						{symbol, ";"}, 
					"}";

symbol = var, "=", expression;

expression = term, [("+" | "-"), term];

term = factor, [("*" | "/"), factor];

factor = ["-"], memberAccess;

memberAccess = literal, [".", memberAccess];

literal = double | quoted_string | varOrCall | "(", expression ")" | "[", expression, {",", expression}, "]";

varOrCall = var, ["(", expression, {",", expression}, ")"]; 

var = (alchar | "_"), {alchar | digit | "_"};

declaration = type, var;

type =  "scalar" | "vec3"  | "rotation" | "frame" 
	   | "hardC" | "softC" | "contC"    
	   | "map",  "<", type, ">" 
	   | "list", "<", type, ">"; 

quoted_string = """, {(*all characters*)}, """;

alchar = "A" | "B" | "C" | "D" | "E" | "F" | "G"
       | "H" | "I" | "J" | "K" | "L" | "M" | "N"
       | "O" | "P" | "Q" | "R" | "S" | "T" | "U"
       | "V" | "W" | "X" | "Y" | "Z" | "a" | "b" 
       | "c" | "d" | "e" | "f" | "g" | "h" | "i" 
       | "j" | "k" | "l" | "m" | "n" | "o" | "p" 
       | "q" | "r" | "s" | "t" | "u" | "v" | "w" 
       | "x" | "y" | "z" ;
 digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9" ;